
1 + [1]
'1' + [1]
null + 1
1 - [1]
empty - '2'
null - 1
1 * '1'
null * 1
1 / '1'
null / 1
1 % '1'
null % 1

i

val i = 1
val i = 2

val j = 0
j = 1

val i
i

while 1 {}
if 2 {}

for i in 1 {}

[1, 2, 3][true]

[1, 2, 3][3]

true || 1
var l = true
l[0]
l[0] = 1
l = [1, 2, 3]
l[true] = 2
l[5] = 5

val x = 0
x += 1

0 || true
0 && true
true && 1

true > 0
0 < false

0 in true

true..2
empty..null
0..false

-empty

!0

l()

fun f() {

}

f(0)

fun f(x) {

}

fun a(x, x) {

}

panic("some")
dict2pairs(0)

+null

break